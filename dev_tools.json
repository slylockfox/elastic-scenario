### Part 1 – Data Modeling & Index Setup
GET gear_products
GET gear_products/_search
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "page_size": 0,
    "filters": []
  }
}

### Part 2 – Search Use Cases

## Lexical Search

## Full-text search on title and description
# Boosting based on fields
## Relevance & Ranking
# Custom relevance tuning with boosting and scoring
# Use of function_score 
# Rescoring (post filters)
# Filtering available products only 
GET _scripts/search_template_main
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "unquoted_search_terms": "shirt",
    "filters": [],
    "postfilters": {
        "term": { "available": "true" }
    },
    "source_fields": [
      {"source_field": "title_x"},
      {"source_field": "brand"},
      {"source_field": "details"},
      {"source_field": "created_at","last": true}
    ],
    "sorts": [
      {"sort": {"created_at": "desc"},"last": true}
    ]
  }
}

# Autocomplete with search-as-you-type or edge n-gram
GET _scripts/search_template_typeahead
GET gear_products/_search/template
{
    "id": "search_template_typeahead",
    "params": {
        "all_typed_so_far": "studio scul"
    }
}

# Synonyms
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "unquoted_search_terms": "sportfishing",
    "desc_subfield": "synonyms",
    "filters": []
  }
}

# Fuzzy matching 
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "unquoted_search_terms": "shirtz",
    "fuzziness": "AUTO",
    "filters": []
  }
}

# Phrase search 
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "quoted_search_terms": "camping food",
    "filters": []
  }
}

## Structured Search & Filtering
# Filter by category, brand, price range, tags
GET gear_products/_search/template
{
    "id": "search_template_main",
    "params": {
        "filters": [
          {"term": { "categories": "Fishing" }},
          {"term": { "brand": "Booyah" }} ,
          {"range": {"price": {"lte": 5}}}
               ],
    "source_fields": [
      {"source_field": "title_x"},
      {"source_field": "brand"},
      {"source_field": "categories"},
      {"source_field": "price","last": true}
    ]
    }
}

# Sort by price, date added, or rating
GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "unquoted_search_terms": "shirt",
    "desc_subfield": "synonyms",
    "filters": [],
    "source_fields": [
      {"source_field": "title_x"},
      {"source_field": "price"},
      {"source_field": "average_rating"},
      {"source_field": "created_at","last": true}
    ],
    "sorts": [
      {"sort": {"average_rating": "desc"}},
      {"sort": {"created_at": "desc"},"last": true}
    ]
  }
}

## Semantic / Vector
GET gear_products/_search
{
   "query":{
      "sparse_vector": {
        "field": "title_elser_embedding",
        "inference_id": ".elser_model_2_linux-x86_64",
        "query": "shirts from sports teams"
      }
   },
   "_source": ["title_x"]
}

######################################################

GET gear_products/_search
{
   "query":{
      "sparse_vector": {
        "field": "title_elser_embedding",
        "inference_id": ".elser_model_2_linux-x86_64",
        "query": "shirts from sports teams"
      }
   },
   "_source": ["title_x"]
}

GET gear_products/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match_phrase": {
            "title_x.ngrams": "ess"
          }
        }
      ]
    }
  }
}

GET gear_products/_search
{
    "suggest": {
      "titles": {
        "prefix": "ama",
        "completion": {
            "field": "typeahead",
            "size": 3,
            "contexts": { "typeahead_context": [ "All" ] }
        }
      }
    }
}

GET gear_products/_search/template
{
    "id": "search_template_typeahead",
    "params": {
        "all_typed_so_far": "studio scul"
    }
}

POST _scripts/search_template_typeahead


PUT _synonyms/gear_synonym_set
{
  "synonyms_set": []
}
GET gear_products/_search
{
    "query": {
        "match": {
          "description.synonyms": "humankind"
        }
    }
}
GET gear_products/_search
{
  "query": {
    "multi_match": {
       "query": "shirtz",
        "fields": "description.stemmed",
        "fuzziness": "AUTO"
      }
    }
  }
}

GET gear_products/_search/template
{
    "id": "search_template_main",
    "params": {
        "unquoted_search_terms": "youth helmet",
        "filters": []
    }
}

GET gear_products/_search/template
{
    "id": "search_template_main",
    "params": {
        "unquoted_search_terms": "outdoor",
        "filters": {
          "term": { "categories": "Fishing" }
        }
    }
}

GET gear_products/_search/template
{
  "id": "search_template_main",
  "params": {
    "unquoted_search_terms": "shirtz",
    "fuzziness": "AUTO",
    "desc_subfield": "synonyms",
    "filters": [],
    "postfilters": {
        "term": { "available": "true" }
    },
    "source_fields": [
      {"source_field": "title_x"},
      {"source_field": "brand"},
      {"source_field": "details"},
      {"source_field": "created_at","last": true}
    ],
    "sorts": [
      {"sort": {"created_at": "asc"},"last": true}
    ]
  }
}

POST _scripts/search_template_main



GET gear_products/_search
{
    "size": 0,
    "aggs": {
      "dates": {
        "date_histogram": {
            "field": "created_at",
        "calendar_interval": "year"
        }
      },
      "prices": {
        "histogram": {
          "field": "price",
          "interval": 50,
        "min_doc_count": 1
        }
      }
    }
}

DELETE gear_products
GET gear_products/
GET gear_products/_search
GET gear_products/_search
{
    "query": {
        "match": {
          "parent_asin": "B08NC79TYP"
        }
    }
}

DELETE _index_template/index_template_gear_products
PUT _index_template/index_template_gear_products

PUT _ingest/pipeline/ingest_pipeline_gear_products


POST _reindex
{
    "source": {"index":"staged_gear_products"},
    "dest": {"index": "gear_products"}
}




DELETE staged_gear_products
POST _reindex
{
    "source": {"index":"gear_products"},
    "dest": {"index": "staged_gear_products"}
}
GET staged_gear_products/_search
GET staged_gear_products/_doc/B00363PRK6

GET _cat/indices
DELETE products-catalog-2

# Welcome to the Dev Tools Console!
#
# You can use Console to explore the Elasticsearch API. See the Elasticsearch API reference to learn more:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/rest-apis.html
#
# Here are a few examples to get you started.


# Create an index
PUT /my-index


# Add a document to my-index
POST /my-index/_doc
{
    "id": "park_rocky-mountain",
    "title": "Rocky Mountain",
    "description": "Bisected north to south by the Continental Divide, this portion of the Rockies has ecosystems varying from over 150 riparian lakes to montane and subalpine forests to treeless alpine tundra."
}


# Perform a search in my-index
GET /my-index/_search?q="rocky mountain"
GET /my-index/_search
GET /my-index/_search
{
    "query": {
        "match": {
          "description": "rocky"
        }
    }
}


